{"version":3,"file":"component---node-modules-gatsby-theme-code-notes-src-templates-tag-page-js-2119de5fad72ba86d6ae.js","mappings":"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","sources":["webpack://gatsby-starter-code-notes/./node_modules/gatsby-theme-code-notes/src/components/NoteList/SortButton.tsx","webpack://gatsby-starter-code-notes/./node_modules/gatsby-theme-code-notes/src/components/NoteList/useSortableData.ts","webpack://gatsby-starter-code-notes/./node_modules/@hookit/local-storage/esm/useLocalStorage.js","webpack://gatsby-starter-code-notes/./node_modules/gatsby-theme-code-notes/src/components/NoteList/NoteList.tsx","webpack://gatsby-starter-code-notes/./node_modules/gatsby-theme-code-notes/src/components/NotesPage/NotesPage.tsx","webpack://gatsby-starter-code-notes/./node_modules/gatsby-theme-code-notes/src/templates/TagPage.js"],"sourcesContent":["import React, { Fragment } from 'react'\nimport { Button } from 'theme-ui'\nimport { BiSortDown, BiSortUp } from 'react-icons/bi'\n\nconst getClassNamesFor = (name, sortConfig) => {\n  if (!sortConfig) {\n    return\n  }\n  return sortConfig.key === name ? `active ${sortConfig.direction}` : undefined\n}\n\nexport const SortButton = ({ requestSort, sortKey, sortConfig, children }) => (\n  <Button\n    variant=\"sort\"\n    type=\"button\"\n    onClick={() => requestSort(sortKey)}\n    className={getClassNamesFor(sortKey, sortConfig)}\n  >\n    {children}\n    {sortConfig.key === sortKey && (\n      <Fragment>\n        {sortConfig.direction === 'descending' ? (\n          <BiSortDown\n            sx={{\n              color: 'inherit',\n              pointerEvents: 'none',\n            }}\n            size=\"15px\"\n          />\n        ) : (\n          <BiSortUp\n            sx={{\n              color: 'inherit',\n              pointerEvents: 'none',\n            }}\n            size=\"15px\"\n          />\n        )}\n      </Fragment>\n    )}\n  </Button>\n)\n","import { useLocalStorage } from '@hookit/local-storage'\nimport { useMemo } from 'react'\n\nexport const useSortableData = (items, config = null) => {\n  const [sortConfig, setSortConfig] = useLocalStorage(\n    'codeNotesSortConfig',\n    config\n  )\n\n  const sortedItems = useMemo(() => {\n    let sortableItems = [...items]\n    if (sortConfig !== null) {\n      sortableItems.sort((a, b) => {\n        if (\n          a.node.frontmatter[sortConfig.key]?.toLowerCase() <\n          b.node.frontmatter[sortConfig.key]?.toLowerCase()\n        ) {\n          return sortConfig.direction === 'ascending' ? -1 : 1\n        }\n        if (\n          a.node.frontmatter[sortConfig.key]?.toLowerCase() >\n          b.node.frontmatter[sortConfig.key]?.toLowerCase()\n        ) {\n          return sortConfig.direction === 'ascending' ? 1 : -1\n        }\n        return 0\n      })\n    }\n    return sortableItems\n  }, [items, sortConfig])\n\n  const requestSort = (key) => {\n    let direction = 'ascending'\n    if (\n      sortConfig &&\n      sortConfig.key === key &&\n      sortConfig.direction === 'ascending'\n    ) {\n      direction = 'descending'\n    }\n    setSortConfig({ key, direction })\n  }\n\n  return { items: sortedItems, requestSort, sortConfig }\n}\n","import * as React from 'react';\nexport function useLocalStorage(key, initialValue) {\n  const [storedValue, setStoredValue] = React.useState(() => {\n    try {\n      const item = window.localStorage.getItem(key);\n      if (item) {\n        const test = item.match(/^(\\[|\\{|\\d).*(\\]|\\}|\\d)?$/gm);\n        if (test && test.length) {\n          return JSON.parse(item);\n        } else {\n          return item;\n        }\n      } else {\n        return initialValue;\n      }\n    } catch (error) {\n      return initialValue;\n    }\n  });\n  const setValue = React.useCallback(value => {\n    try {\n      setStoredValue(value);\n      if (typeof value === 'object') {\n        window.localStorage.setItem(key, JSON.stringify(value));\n      } else {\n        window.localStorage.setItem(key, value);\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  }, [key]);\n  return [storedValue, setValue];\n}","import React, { Fragment, FunctionComponent } from 'react'\nimport { Flex } from 'theme-ui'\nimport { NoteListItem } from '../NoteListItem'\nimport { SortButton } from './SortButton'\nimport { useSortableData } from './useSortableData'\nimport slugify from '@alexcarpenter/slugify'\n\ninterface NoteListProps {\n  notes: any[]\n}\n\nexport const NoteList: FunctionComponent<NoteListProps> = ({ notes }) => {\n  const { items, requestSort, sortConfig } = useSortableData(notes, {\n    key: 'title',\n    direction: 'ascending',\n  })\n\n  return (\n    <Fragment>\n      <Flex\n        sx={{\n          justifyContent: 'flex-end',\n          alignItems: 'center',\n          mb: 2,\n        }}\n      >\n        <SortButton\n          requestSort={requestSort}\n          sortKey=\"title\"\n          sortConfig={sortConfig}\n        >\n          A-Z\n        </SortButton>\n        <SortButton\n          requestSort={requestSort}\n          sortKey=\"modifiedTimestamp\"\n          sortConfig={sortConfig}\n        >\n          Date\n        </SortButton>\n      </Flex>\n\n      {items.map(({ node }) => {\n        const {\n          title,\n          tags,\n          emoji,\n          modified,\n          modifiedTimestamp,\n        } = node.frontmatter\n        const slug = `/${slugify(node.fields.slug)}`\n        return (\n          <NoteListItem\n            title={title}\n            emoji={emoji}\n            tags={tags}\n            slug={slug}\n            key={slug}\n            dateModified={modified}\n            modifiedTimestamp={modifiedTimestamp}\n          />\n        )\n      })}\n    </Fragment>\n  )\n}\n","/** @jsx jsx */\nimport { jsx, Heading } from 'theme-ui'\nimport { Fragment } from 'react'\nimport { NoteList } from '../NoteList'\nimport { Layout } from '../Layout'\nimport { useSiteMetadata } from '../../use-site-metadata'\nimport { TagDot } from '../TagDot'\n\nexport const NotesPage = ({ data, pageContext, location }) => {\n  const notes = data.allMdx.edges\n  const { title } = useSiteMetadata()\n  const siteTitle = title\n\n  return (\n    <Layout\n      activeTag={pageContext.tag}\n      path={location.pathname}\n      basePath={pageContext.basePath}\n      hasUntagged={pageContext.hasUntagged}\n      tags={pageContext.tags}\n      title={pageContext.tag ? `Tag: ${pageContext.tag}` : siteTitle}\n    >\n      {pageContext.tag && (\n        <Heading as=\"h1\" variant=\"noteTitle\">\n          {pageContext.tag !== 'untagged' ? (\n            <Fragment>\n              <TagDot tag={pageContext.tag} size=\"0.5em\" /> {pageContext.tag}\n            </Fragment>\n          ) : (\n            <Fragment>Untagged Notes</Fragment>\n          )}\n        </Heading>\n      )}\n      <NoteList notes={notes} />\n    </Layout>\n  )\n}\n","import { graphql } from 'gatsby'\nimport { NotesPage } from '../components/NotesPage'\n\nexport default NotesPage\n\nexport const pageQuery = graphql`\n  query($tag: String!) {\n    allMdx(\n      sort: { fields: frontmatter___title, order: ASC }\n      filter: { frontmatter: { tags: { eq: $tag } } }\n    ) {\n      edges {\n        node {\n          id\n          ...AllPages\n        }\n      }\n    }\n  }\n`\n"],"names":["getClassNamesFor","name","sortConfig","key","direction","undefined","SortButton","_ref","requestSort","sortKey","children","React","Button","variant","type","onClick","className","Fragment","BiSortDown","sx","color","pointerEvents","size","BiSortUp","useSortableData","items","config","setSortConfig","initialValue","storedValue","setStoredValue","item","window","localStorage","getItem","test","match","length","JSON","parse","error","value","setItem","stringify","console","useLocalStorage","useMemo","sortableItems","_toConsumableArray","sort","a","b","_a$node$frontmatter$s","_b$node$frontmatter$s","_a$node$frontmatter$s2","_b$node$frontmatter$s2","node","frontmatter","toLowerCase","NoteList","notes","Flex","justifyContent","alignItems","mb","map","_ref2","title","tags","emoji","modified","modifiedTimestamp","slug","slugify","fields","NoteListItem","dateModified","NotesPage","data","pageContext","location","allMdx","edges","useSiteMetadata","siteTitle","jsx","Layout","activeTag","tag","path","pathname","basePath","hasUntagged","Heading","as","TagDot"],"sourceRoot":""}